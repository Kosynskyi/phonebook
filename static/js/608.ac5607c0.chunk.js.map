{"version":3,"file":"static/js/608.ac5607c0.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","services/hooks/useContacts.js","components/ContactAddForm/ContactAddForm.jsx","redux/filter/filterSelectors.js","services/hooks/useFilter.js","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nconst useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  return contacts;\n};\n\nexport default useContacts;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport {\n  Box,\n  TextField,\n  Button,\n  InputAdornment,\n  Alert,\n  Snackbar,\n} from '@mui/material';\n\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\n\nimport { createContact } from 'redux/contacts/contactsOperations';\nimport useContacts from 'services/hooks/useContacts';\nimport useLoading from 'services/hooks/useLoading';\n\nconst ContactAddForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const [succsessAlertOpen, setSuccsessAlertOpen] = useState(false);\n  const [warningAlertOpen, setWarningAlertOpen] = useState(false);\n  const isLoading = useLoading();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const closeSuccessAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSuccsessAlertOpen(false);\n  };\n\n  const closeWarningAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setWarningAlertOpen(false);\n  };\n\n  const onSubmit = data => {\n    const normalizedName = data.name.toLowerCase();\n    const repeatContactName = contacts.find(\n      ({ name }) => name.toLowerCase() === normalizedName\n    );\n\n    if (repeatContactName) {\n      return setWarningAlertOpen(true);\n    }\n\n    dispatch(createContact(data));\n    setSuccsessAlertOpen(true);\n    reset();\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        justifyContent: 'center',\n      }}\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <TextField\n        sx={{ marginBottom: 1, fontSize: '12px' }}\n        size=\"small\"\n        label=\"Name\"\n        required\n        variant=\"standard\"\n        autoComplete=\"off\"\n        id=\"input-with-icon-textfield\"\n        {...register('name', {\n          required: 'field is required',\n          minLength: { value: 2, message: 'minimum 2 symbols' },\n          maxLength: { value: 40, message: 'maximum 40 symbols' },\n        })}\n        type=\"text\"\n        helperText={errors?.name && errors?.name?.message}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <PersonAddAlt1Icon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <TextField\n        label=\"Phone number\"\n        required\n        id=\"standard-basic\"\n        sx={{ marginBottom: 1 }}\n        size=\"small\"\n        variant=\"standard\"\n        autoComplete=\"off\"\n        {...register('number', {\n          required: 'field is required',\n          minLength: { value: 3, message: 'minimum 3 numbers' },\n          maxLength: { value: 13, message: 'maximum 13 numbers' },\n          pattern: {\n            value: /^[0-9]*$/,\n            // value:\n            //   /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            message: 'only numbers',\n          },\n        })}\n        type=\"tel\"\n        helperText={errors?.number && errors?.number?.message}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AddIcCallIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button variant=\"outlined\" type=\"submit\" disabled={!isValid || isLoading}>\n        Add contact\n      </Button>\n\n      <Snackbar\n        open={succsessAlertOpen}\n        autoHideDuration={3000}\n        onClose={closeSuccessAlert}\n      >\n        <Alert severity=\"success\" onClose={closeSuccessAlert}>\n          Contact was successfully added!\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        open={warningAlertOpen}\n        autoHideDuration={3000}\n        onClose={closeWarningAlert}\n      >\n        <Alert severity=\"warning\" onClose={closeWarningAlert}>\n          This contact is already contained in the list\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default ContactAddForm;\n","export const selectFilter = state => state?.filter?.filter;\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nconst useFilter = () => {\n  const filter = useSelector(selectFilter);\n  return filter;\n};\n\nexport default useFilter;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Box,\n  List,\n  ListItem,\n  Typography,\n  IconButton,\n  Avatar,\n  Alert,\n  Snackbar,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport useContacts from 'services/hooks/useContacts';\nimport useFilter from 'services/hooks/useFilter';\n\nconst ContactsList = () => {\n  const [deleteAlertOpen, setDeleteAlertOpen] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const filter = useFilter();\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts\n    .filter(item => item.name.toLowerCase().includes(normalizedFilter))\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  const closeDeleteAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setDeleteAlertOpen(false);\n  };\n\n  const stringAvatar = name => {\n    const result = name\n      .split(' ')\n      .map(item => item[0])\n      .splice(0, 2)\n      .join('')\n      .toUpperCase();\n\n    return {\n      children: result,\n    };\n  };\n\n  const deleteAddedContacts = id => {\n    dispatch(deleteContact(id));\n    setDeleteAlertOpen(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        justifyContent: 'center',\n      }}\n    >\n      {contacts.length < 1 ? (\n        <Typography\n          sx={{ marginBottom: 1, marginTop: 2, textAlign: 'center' }}\n          variant=\"h5\"\n          component=\"h2\"\n        >\n          You haven't added anything yet :(\n        </Typography>\n      ) : (\n        <>\n          <Typography\n            sx={{ marginBottom: 1, marginTop: 2, textAlign: 'center' }}\n            variant=\"h6\"\n            component=\"h3\"\n          >\n            Your contact list:{' '}\n          </Typography>\n          <List sx={{ paddingY: 0 }}>\n            {visibleContacts.map(({ id, name, number }, index) => (\n              <ListItem\n                key={id}\n                sx={{\n                  padding: 1,\n                  justifyContent: 'space-between',\n                  backgroundColor:\n                    index % 2\n                      ? { backgroundColor: '#fdffe0' }\n                      : { backgroundColor: 'white' },\n                }}\n              >\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Avatar\n                    sx={{\n                      width: 24,\n                      height: 24,\n                      marginRight: 1,\n                      fontSize: '10px',\n                    }}\n                    {...stringAvatar(name)}\n                  />\n                  <Typography variant=\"subtitle1\" component=\"p\">\n                    {name}: {number}\n                  </Typography>\n                </Box>\n\n                <IconButton\n                  type=\"button\"\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  sx={{\n                    margin: 0,\n                    padding: 0,\n                    color: ' #0000ffcc',\n                    transition: '500ms',\n                    '&:hover': {\n                      transform: 'scale(1.1)',\n                    },\n                  }}\n                  onClick={() => deleteAddedContacts(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItem>\n            ))}\n          </List>\n        </>\n      )}\n      <Snackbar\n        open={deleteAlertOpen}\n        autoHideDuration={3000}\n        onClose={closeDeleteAlert}\n      >\n        <Alert severity=\"success\" onClose={closeDeleteAlert}>\n          Contact was successfully deleted!\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default ContactsList;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { TextField, Box } from '@mui/material';\n\nimport { filterContacts } from 'redux/filter/filterSlice';\n\nconst ContactsFilter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n    setFilter(value);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        justifyContent: 'center',\n      }}\n    >\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        variant=\"standard\"\n        type=\"search\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n\nexport default ContactsFilter;\n","import { Container, Box, Typography } from '@mui/material';\n\nimport ContactAddForm from 'components/ContactAddForm';\nimport ContactsList from 'components/ContactsList';\nimport ContactsFilter from 'components/ContactsFilter';\n\nconst ContactsPage = () => {\n  return (\n    <Container\n      sx={{\n        backgroundColor: '#00000020',\n        height: '100vh',\n      }}\n    >\n      <Box\n        mx={'auto'}\n        sx={{\n          width: 300,\n          height: 300,\n          padding: 2,\n        }}\n      >\n        <Typography\n          sx={{ marginBottom: 1, textAlign: 'center' }}\n          variant=\"h5\"\n          component=\"h2\"\n        >\n          Add new contact\n        </Typography>\n        <ContactAddForm />\n        <Typography\n          sx={{ marginBottom: 1, marginTop: 2, textAlign: 'center' }}\n          variant=\"h5\"\n          component=\"h2\"\n        >\n          Contacts\n        </Typography>\n        <ContactsFilter />\n        <ContactsList />\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","useSelector","dispatch","useDispatch","useContacts","useState","succsessAlertOpen","setSuccsessAlertOpen","warningAlertOpen","setWarningAlertOpen","isLoading","useLoading","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","closeSuccessAlert","event","reason","closeWarningAlert","Box","sx","display","flexDirection","alignItems","justifyContent","component","onSubmit","data","normalizedName","name","toLowerCase","find","createContact","TextField","marginBottom","fontSize","size","label","required","variant","autoComplete","id","minLength","value","message","maxLength","type","helperText","InputProps","startAdornment","InputAdornment","position","PersonAddAlt1","pattern","number","AddIcCall","Button","disabled","Snackbar","open","autoHideDuration","onClose","Alert","severity","selectFilter","filter","deleteAlertOpen","setDeleteAlertOpen","normalizedFilter","useFilter","visibleContacts","item","includes","sort","a","b","localeCompare","closeDeleteAlert","stringAvatar","children","split","map","splice","join","toUpperCase","length","Typography","marginTop","textAlign","List","paddingY","index","ListItem","padding","backgroundColor","Avatar","width","height","marginRight","IconButton","edge","margin","color","transition","transform","onClick","deleteContact","deleteAddedContacts","Delete","setFilter","onChange","target","filterContacts","Container","mx"],"sourceRoot":""}